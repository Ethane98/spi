======== uninstrumented =========

real	0m15.713s
user	0m15.708s
sys	0m0.001s
======== relocated + jump =========
parse time: 2198571.000000
payload
DUMP INSN (32 bytes)- for foo called at 40046b / ret  400470{
    8908000(10 bytes): mov RDI, 5ba5400          | 48 bf 00 54 ba 05 00 00 00 00 
    890800a(10 bytes): mov RAX, 769ba770         | 48 b8 70 a7 9b 76 75 2b 00 00 
    8908014( 2 bytes): call EAX                  | ff d0 
    8908016( 5 bytes): call 400448               | e8 2d 84 af f7 
    890801b( 5 bytes): jmp 400470                | e9 50 84 af f7 

DUMP INSN - }
payload
DUMP INSN (32 bytes)- for foo called at 400475 / ret  40047a{
    a65c000(10 bytes): mov RDI, 6378010          | 48 bf 10 80 37 06 00 00 00 00 
    a65c00a(10 bytes): mov RAX, 769ba770         | 48 b8 70 a7 9b 76 75 2b 00 00 
    a65c014( 2 bytes): call EAX                  | ff d0 
    a65c016( 5 bytes): call 400448               | e8 2d 44 da f5 
    a65c01b( 5 bytes): jmp 40047a                | e9 5a 44 da f5 

DUMP INSN - }
payload
DUMP INSN (32 bytes)- for foo called at 40047f / ret  400484{
    92d9000(10 bytes): mov RDI, 5c019c0          | 48 bf c0 19 c0 05 00 00 00 00 
    92d900a(10 bytes): mov RAX, 769ba770         | 48 b8 70 a7 9b 76 75 2b 00 00 
    92d9014( 2 bytes): call EAX                  | ff d0 
    92d9016( 5 bytes): call 400448               | e8 2d 74 12 f7 
    92d901b( 5 bytes): jmp 400484                | e9 64 74 12 f7 

DUMP INSN - }
payload
DUMP INSN (32 bytes)- for foo called at 400489 / ret  40048e{
    a842000(10 bytes): mov RDI, 8206f50          | 48 bf 50 6f 20 08 00 00 00 00 
    a84200a(10 bytes): mov RAX, 769ba770         | 48 b8 70 a7 9b 76 75 2b 00 00 
    a842014( 2 bytes): call EAX                  | ff d0 
    a842016( 5 bytes): call 400448               | e8 2d e4 bb f5 
    a84201b( 5 bytes): jmp 40048e                | e9 6e e4 bb f5 

DUMP INSN - }
payload
DUMP INSN (32 bytes)- for foo called at 400493 / ret  400498{
    a727000(10 bytes): mov RDI, 9ff44c0          | 48 bf c0 44 ff 09 00 00 00 00 
    a72700a(10 bytes): mov RAX, 769ba770         | 48 b8 70 a7 9b 76 75 2b 00 00 
    a727014( 2 bytes): call EAX                  | ff d0 
    a727016( 5 bytes): call 400448               | e8 2d 94 cd f5 
    a72701b( 5 bytes): jmp 400498                | e9 78 94 cd f5 

DUMP INSN - }
payload
DUMP INSN (32 bytes)- for foo called at 40049d / ret  4004a2{
    a781000(10 bytes): mov RDI, a689d40          | 48 bf 40 9d 68 0a 00 00 00 00 
    a78100a(10 bytes): mov RAX, 769ba770         | 48 b8 70 a7 9b 76 75 2b 00 00 
    a781014( 2 bytes): call EAX                  | ff d0 
    a781016( 5 bytes): call 400448               | e8 2d f4 c7 f5 
    a78101b( 5 bytes): jmp 4004a2                | e9 82 f4 c7 f5 

DUMP INSN - }
payload
DUMP INSN (32 bytes)- for foo called at 4004a7 / ret  4004ac{
    9ff2000(10 bytes): mov RDI, a82e910          | 48 bf 10 e9 82 0a 00 00 00 00 
    9ff200a(10 bytes): mov RAX, 769ba770         | 48 b8 70 a7 9b 76 75 2b 00 00 
    9ff2014( 2 bytes): call EAX                  | ff d0 
    9ff2016( 5 bytes): call 400448               | e8 2d e4 40 f6 
    9ff201b( 5 bytes): jmp 4004ac                | e9 8c e4 40 f6 

DUMP INSN - }
payload
DUMP INSN (32 bytes)- for foo called at 4004b1 / ret  4004b6{
    a077000(10 bytes): mov RDI, a9c5f40          | 48 bf 40 5f 9c 0a 00 00 00 00 
    a07700a(10 bytes): mov RAX, 769ba770         | 48 b8 70 a7 9b 76 75 2b 00 00 
    a077014( 2 bytes): call EAX                  | ff d0 
    a077016( 5 bytes): call 400448               | e8 2d 94 38 f6 
    a07701b( 5 bytes): jmp 4004b6                | e9 96 94 38 f6 

DUMP INSN - }
payload
DUMP INSN (32 bytes)- for foo called at 4004bb / ret  4004c0{
    a25d000(10 bytes): mov RDI, a7fdcd0          | 48 bf d0 dc 7f 0a 00 00 00 00 
    a25d00a(10 bytes): mov RAX, 769ba770         | 48 b8 70 a7 9b 76 75 2b 00 00 
    a25d014( 2 bytes): call EAX                  | ff d0 
    a25d016( 5 bytes): call 400448               | e8 2d 34 1a f6 
    a25d01b( 5 bytes): jmp 4004c0                | e9 a0 34 1a f6 

DUMP INSN - }
payload
DUMP INSN (32 bytes)- for foo called at 4004c5 / ret  4004ca{
    a963000(10 bytes): mov RDI, 5d2ee60          | 48 bf 60 ee d2 05 00 00 00 00 
    a96300a(10 bytes): mov RAX, 769ba770         | 48 b8 70 a7 9b 76 75 2b 00 00 
    a963014( 2 bytes): call EAX                  | ff d0 
    a963016( 5 bytes): call 400448               | e8 2d d4 a9 f5 
    a96301b( 5 bytes): jmp 4004ca                | e9 aa d4 a9 f5 

DUMP INSN - }
# of calls: 0

real	3m26.914s
user	3m26.658s
sys	0m0.115s
======== payload + relocated + jump =========
parse time: 2195730.000000
payload
DUMP INSN (32 bytes)- for foo called at 40046b / ret  400470{
    1337a000(10 bytes): mov RDI, 15bca290         | 48 bf 90 a2 bc 15 00 00 00 00 
    1337a00a(10 bytes): mov RAX, e9824770         | 48 b8 70 47 82 e9 f9 2a 00 00 
    1337a014( 2 bytes): call EAX                  | ff d0 
    1337a016( 5 bytes): call 400448               | e8 2d 64 08 ed 
    1337a01b( 5 bytes): jmp 400470                | e9 50 64 08 ed 

DUMP INSN - }
payload
DUMP INSN (32 bytes)- for foo called at 400475 / ret  40047a{
    15ba6000(10 bytes): mov RDI, 15cedb40         | 48 bf 40 db ce 15 00 00 00 00 
    15ba600a(10 bytes): mov RAX, e9824770         | 48 b8 70 47 82 e9 f9 2a 00 00 
    15ba6014( 2 bytes): call EAX                  | ff d0 
    15ba6016( 5 bytes): call 400448               | e8 2d a4 85 ea 
    15ba601b( 5 bytes): jmp 40047a                | e9 5a a4 85 ea 

DUMP INSN - }
payload
DUMP INSN (32 bytes)- for foo called at 40047f / ret  400484{
    14561000(10 bytes): mov RDI, 11233500         | 48 bf 00 35 23 11 00 00 00 00 
    1456100a(10 bytes): mov RAX, e9824770         | 48 b8 70 47 82 e9 f9 2a 00 00 
    14561014( 2 bytes): call EAX                  | ff d0 
    14561016( 5 bytes): call 400448               | e8 2d f4 e9 eb 
    1456101b( 5 bytes): jmp 400484                | e9 64 f4 e9 eb 

DUMP INSN - }
payload
DUMP INSN (32 bytes)- for foo called at 400489 / ret  40048e{
    15d6b000(10 bytes): mov RDI, 11204b80         | 48 bf 80 4b 20 11 00 00 00 00 
    15d6b00a(10 bytes): mov RAX, e9824770         | 48 b8 70 47 82 e9 f9 2a 00 00 
    15d6b014( 2 bytes): call EAX                  | ff d0 
    15d6b016( 5 bytes): call 400448               | e8 2d 54 69 ea 
    15d6b01b( 5 bytes): jmp 40048e                | e9 6e 54 69 ea 

DUMP INSN - }
payload
DUMP INSN (32 bytes)- for foo called at 400493 / ret  400498{
    15c4c000(10 bytes): mov RDI, 111892e0         | 48 bf e0 92 18 11 00 00 00 00 
    15c4c00a(10 bytes): mov RAX, e9824770         | 48 b8 70 47 82 e9 f9 2a 00 00 
    15c4c014( 2 bytes): call EAX                  | ff d0 
    15c4c016( 5 bytes): call 400448               | e8 2d 44 7b ea 
    15c4c01b( 5 bytes): jmp 400498                | e9 78 44 7b ea 

DUMP INSN - }
payload
DUMP INSN (32 bytes)- for foo called at 40049d / ret  4004a2{
    15ca6000(10 bytes): mov RDI, 11196180         | 48 bf 80 61 19 11 00 00 00 00 
    15ca600a(10 bytes): mov RAX, e9824770         | 48 b8 70 47 82 e9 f9 2a 00 00 
    15ca6014( 2 bytes): call EAX                  | ff d0 
    15ca6016( 5 bytes): call 400448               | e8 2d a4 75 ea 
    15ca601b( 5 bytes): jmp 4004a2                | e9 82 a4 75 ea 

DUMP INSN - }
payload
DUMP INSN (32 bytes)- for foo called at 4004a7 / ret  4004ac{
    15b82000(10 bytes): mov RDI, 11014030         | 48 bf 30 40 01 11 00 00 00 00 
    15b8200a(10 bytes): mov RAX, e9824770         | 48 b8 70 47 82 e9 f9 2a 00 00 
    15b82014( 2 bytes): call EAX                  | ff d0 
    15b82016( 5 bytes): call 400448               | e8 2d e4 87 ea 
    15b8201b( 5 bytes): jmp 4004ac                | e9 8c e4 87 ea 

DUMP INSN - }
payload
DUMP INSN (32 bytes)- for foo called at 4004b1 / ret  4004b6{
    1559d000(10 bytes): mov RDI, 115c8f10         | 48 bf 10 8f 5c 11 00 00 00 00 
    1559d00a(10 bytes): mov RAX, e9824770         | 48 b8 70 47 82 e9 f9 2a 00 00 
    1559d014( 2 bytes): call EAX                  | ff d0 
    1559d016( 5 bytes): call 400448               | e8 2d 34 e6 ea 
    1559d01b( 5 bytes): jmp 4004b6                | e9 96 34 e6 ea 

DUMP INSN - }
payload
DUMP INSN (32 bytes)- for foo called at 4004bb / ret  4004c0{
    15e89000(10 bytes): mov RDI, 1176c950         | 48 bf 50 c9 76 11 00 00 00 00 
    15e8900a(10 bytes): mov RAX, e9824770         | 48 b8 70 47 82 e9 f9 2a 00 00 
    15e89014( 2 bytes): call EAX                  | ff d0 
    15e89016( 5 bytes): call 400448               | e8 2d 74 57 ea 
    15e8901b( 5 bytes): jmp 4004c0                | e9 a0 74 57 ea 

DUMP INSN - }
payload
DUMP INSN (32 bytes)- for foo called at 4004c5 / ret  4004ca{
    15e8a000(10 bytes): mov RDI, 15b8d460         | 48 bf 60 d4 b8 15 00 00 00 00 
    15e8a00a(10 bytes): mov RAX, e9824770         | 48 b8 70 47 82 e9 f9 2a 00 00 
    15e8a014( 2 bytes): call EAX                  | ff d0 
    15e8a016( 5 bytes): call 400448               | e8 2d 64 57 ea 
    15e8a01b( 5 bytes): jmp 4004ca                | e9 aa 64 57 ea 

DUMP INSN - }
# of calls: 0

real	3m7.903s
user	3m7.624s
sys	0m0.123s
======== context + payload + relocated + jump =========
parse time: 2188325.000000
save context
payload
restore context
DUMP INSN (50 bytes)- for foo called at 40046b / ret  400470{
    e001000( 1 bytes): push RDI, RSP             | 57 
    e001001( 1 bytes): push RSI, RSP             | 56 
    e001002( 1 bytes): push RDX, RSP             | 52 
    e001003( 1 bytes): push RCX, RSP             | 51 
    e001004( 2 bytes): push R8, RSP              | 41 50 
    e001006( 2 bytes): push R9, RSP              | 41 51 
    e001008( 1 bytes): push RAX, RSP             | 50 
    e001009(10 bytes): mov RDI, b29e400          | 48 bf 00 e4 29 0b 00 00 00 00 
    e001013(10 bytes): mov RAX, af5ab770         | 48 b8 70 b7 5a af e9 2a 00 00 
    e00101d( 2 bytes): call EAX                  | ff d0 
    e00101f( 1 bytes): pop RAX, RSP              | 58 
    e001020( 2 bytes): pop R9, RSP               | 41 59 
    e001022( 2 bytes): pop R8, RSP               | 41 58 
    e001024( 1 bytes): pop RCX, RSP              | 59 
    e001025( 1 bytes): pop RDX, RSP              | 5a 
    e001026( 1 bytes): pop RSI, RSP              | 5e 
    e001027( 1 bytes): pop RDI, RSP              | 5f 
    e001028( 5 bytes): call 400448               | e8 1b f4 3f f2 
    e00102d( 5 bytes): jmp 400470                | e9 3e f4 3f f2 

DUMP INSN - }
save context
payload
restore context
DUMP INSN (50 bytes)- for foo called at 400475 / ret  40047a{
    fd55000( 1 bytes): push RDI, RSP             | 57 
    fd55001( 1 bytes): push RSI, RSP             | 56 
    fd55002( 1 bytes): push RDX, RSP             | 52 
    fd55003( 1 bytes): push RCX, RSP             | 51 
    fd55004( 2 bytes): push R8, RSP              | 41 50 
    fd55006( 2 bytes): push R9, RSP              | 41 51 
    fd55008( 1 bytes): push RAX, RSP             | 50 
    fd55009(10 bytes): mov RDI, ba71010          | 48 bf 10 10 a7 0b 00 00 00 00 
    fd55013(10 bytes): mov RAX, af5ab770         | 48 b8 70 b7 5a af e9 2a 00 00 
    fd5501d( 2 bytes): call EAX                  | ff d0 
    fd5501f( 1 bytes): pop RAX, RSP              | 58 
    fd55020( 2 bytes): pop R9, RSP               | 41 59 
    fd55022( 2 bytes): pop R8, RSP               | 41 58 
    fd55024( 1 bytes): pop RCX, RSP              | 59 
    fd55025( 1 bytes): pop RDX, RSP              | 5a 
    fd55026( 1 bytes): pop RSI, RSP              | 5e 
    fd55027( 1 bytes): pop RDI, RSP              | 5f 
    fd55028( 5 bytes): call 400448               | e8 1b b4 6a f0 
    fd5502d( 5 bytes): jmp 40047a                | e9 48 b4 6a f0 

DUMP INSN - }
save context
payload
restore context
DUMP INSN (50 bytes)- for foo called at 40047f / ret  400484{
    e9d2000( 1 bytes): push RDI, RSP             | 57 
    e9d2001( 1 bytes): push RSI, RSP             | 56 
    e9d2002( 1 bytes): push RDX, RSP             | 52 
    e9d2003( 1 bytes): push RCX, RSP             | 51 
    e9d2004( 2 bytes): push R8, RSP              | 41 50 
    e9d2006( 2 bytes): push R9, RSP              | 41 51 
    e9d2008( 1 bytes): push RAX, RSP             | 50 
    e9d2009(10 bytes): mov RDI, b2fa9c0          | 48 bf c0 a9 2f 0b 00 00 00 00 
    e9d2013(10 bytes): mov RAX, af5ab770         | 48 b8 70 b7 5a af e9 2a 00 00 
    e9d201d( 2 bytes): call EAX                  | ff d0 
    e9d201f( 1 bytes): pop RAX, RSP              | 58 
    e9d2020( 2 bytes): pop R9, RSP               | 41 59 
    e9d2022( 2 bytes): pop R8, RSP               | 41 58 
    e9d2024( 1 bytes): pop RCX, RSP              | 59 
    e9d2025( 1 bytes): pop RDX, RSP              | 5a 
    e9d2026( 1 bytes): pop RSI, RSP              | 5e 
    e9d2027( 1 bytes): pop RDI, RSP              | 5f 
    e9d2028( 5 bytes): call 400448               | e8 1b e4 a2 f1 
    e9d202d( 5 bytes): jmp 400484                | e9 52 e4 a2 f1 

DUMP INSN - }
save context
payload
restore context
DUMP INSN (50 bytes)- for foo called at 400489 / ret  40048e{
    ff3b000( 1 bytes): push RDI, RSP             | 57 
    ff3b001( 1 bytes): push RSI, RSP             | 56 
    ff3b002( 1 bytes): push RDX, RSP             | 52 
    ff3b003( 1 bytes): push RCX, RSP             | 51 
    ff3b004( 2 bytes): push R8, RSP              | 41 50 
    ff3b006( 2 bytes): push R9, RSP              | 41 51 
    ff3b008( 1 bytes): push RAX, RSP             | 50 
    ff3b009(10 bytes): mov RDI, d8fff50          | 48 bf 50 ff 8f 0d 00 00 00 00 
    ff3b013(10 bytes): mov RAX, af5ab770         | 48 b8 70 b7 5a af e9 2a 00 00 
    ff3b01d( 2 bytes): call EAX                  | ff d0 
    ff3b01f( 1 bytes): pop RAX, RSP              | 58 
    ff3b020( 2 bytes): pop R9, RSP               | 41 59 
    ff3b022( 2 bytes): pop R8, RSP               | 41 58 
    ff3b024( 1 bytes): pop RCX, RSP              | 59 
    ff3b025( 1 bytes): pop RDX, RSP              | 5a 
    ff3b026( 1 bytes): pop RSI, RSP              | 5e 
    ff3b027( 1 bytes): pop RDI, RSP              | 5f 
    ff3b028( 5 bytes): call 400448               | e8 1b 54 4c f0 
    ff3b02d( 5 bytes): jmp 40048e                | e9 5c 54 4c f0 

DUMP INSN - }
save context
payload
restore context
DUMP INSN (50 bytes)- for foo called at 400493 / ret  400498{
    fe20000( 1 bytes): push RDI, RSP             | 57 
    fe20001( 1 bytes): push RSI, RSP             | 56 
    fe20002( 1 bytes): push RDX, RSP             | 52 
    fe20003( 1 bytes): push RCX, RSP             | 51 
    fe20004( 2 bytes): push R8, RSP              | 41 50 
    fe20006( 2 bytes): push R9, RSP              | 41 51 
    fe20008( 1 bytes): push RAX, RSP             | 50 
    fe20009(10 bytes): mov RDI, f6ed4c0          | 48 bf c0 d4 6e 0f 00 00 00 00 
    fe20013(10 bytes): mov RAX, af5ab770         | 48 b8 70 b7 5a af e9 2a 00 00 
    fe2001d( 2 bytes): call EAX                  | ff d0 
    fe2001f( 1 bytes): pop RAX, RSP              | 58 
    fe20020( 2 bytes): pop R9, RSP               | 41 59 
    fe20022( 2 bytes): pop R8, RSP               | 41 58 
    fe20024( 1 bytes): pop RCX, RSP              | 59 
    fe20025( 1 bytes): pop RDX, RSP              | 5a 
    fe20026( 1 bytes): pop RSI, RSP              | 5e 
    fe20027( 1 bytes): pop RDI, RSP              | 5f 
    fe20028( 5 bytes): call 400448               | e8 1b 04 5e f0 
    fe2002d( 5 bytes): jmp 400498                | e9 66 04 5e f0 

DUMP INSN - }
save context
payload
restore context
DUMP INSN (50 bytes)- for foo called at 40049d / ret  4004a2{
    fe7a000( 1 bytes): push RDI, RSP             | 57 
    fe7a001( 1 bytes): push RSI, RSP             | 56 
    fe7a002( 1 bytes): push RDX, RSP             | 52 
    fe7a003( 1 bytes): push RCX, RSP             | 51 
    fe7a004( 2 bytes): push R8, RSP              | 41 50 
    fe7a006( 2 bytes): push R9, RSP              | 41 51 
    fe7a008( 1 bytes): push RAX, RSP             | 50 
    fe7a009(10 bytes): mov RDI, fd82d40          | 48 bf 40 2d d8 0f 00 00 00 00 
    fe7a013(10 bytes): mov RAX, af5ab770         | 48 b8 70 b7 5a af e9 2a 00 00 
    fe7a01d( 2 bytes): call EAX                  | ff d0 
    fe7a01f( 1 bytes): pop RAX, RSP              | 58 
    fe7a020( 2 bytes): pop R9, RSP               | 41 59 
    fe7a022( 2 bytes): pop R8, RSP               | 41 58 
    fe7a024( 1 bytes): pop RCX, RSP              | 59 
    fe7a025( 1 bytes): pop RDX, RSP              | 5a 
    fe7a026( 1 bytes): pop RSI, RSP              | 5e 
    fe7a027( 1 bytes): pop RDI, RSP              | 5f 
    fe7a028( 5 bytes): call 400448               | e8 1b 64 58 f0 
    fe7a02d( 5 bytes): jmp 4004a2                | e9 70 64 58 f0 

DUMP INSN - }
save context
payload
restore context
DUMP INSN (50 bytes)- for foo called at 4004a7 / ret  4004ac{
    f6eb000( 1 bytes): push RDI, RSP             | 57 
    f6eb001( 1 bytes): push RSI, RSP             | 56 
    f6eb002( 1 bytes): push RDX, RSP             | 52 
    f6eb003( 1 bytes): push RCX, RSP             | 51 
    f6eb004( 2 bytes): push R8, RSP              | 41 50 
    f6eb006( 2 bytes): push R9, RSP              | 41 51 
    f6eb008( 1 bytes): push RAX, RSP             | 50 
    f6eb009(10 bytes): mov RDI, ff27910          | 48 bf 10 79 f2 0f 00 00 00 00 
    f6eb013(10 bytes): mov RAX, af5ab770         | 48 b8 70 b7 5a af e9 2a 00 00 
    f6eb01d( 2 bytes): call EAX                  | ff d0 
    f6eb01f( 1 bytes): pop RAX, RSP              | 58 
    f6eb020( 2 bytes): pop R9, RSP               | 41 59 
    f6eb022( 2 bytes): pop R8, RSP               | 41 58 
    f6eb024( 1 bytes): pop RCX, RSP              | 59 
    f6eb025( 1 bytes): pop RDX, RSP              | 5a 
    f6eb026( 1 bytes): pop RSI, RSP              | 5e 
    f6eb027( 1 bytes): pop RDI, RSP              | 5f 
    f6eb028( 5 bytes): call 400448               | e8 1b 54 d1 f0 
    f6eb02d( 5 bytes): jmp 4004ac                | e9 7a 54 d1 f0 

DUMP INSN - }
save context
payload
restore context
DUMP INSN (50 bytes)- for foo called at 4004b1 / ret  4004b6{
    f770000( 1 bytes): push RDI, RSP             | 57 
    f770001( 1 bytes): push RSI, RSP             | 56 
    f770002( 1 bytes): push RDX, RSP             | 52 
    f770003( 1 bytes): push RCX, RSP             | 51 
    f770004( 2 bytes): push R8, RSP              | 41 50 
    f770006( 2 bytes): push R9, RSP              | 41 51 
    f770008( 1 bytes): push RAX, RSP             | 50 
    f770009(10 bytes): mov RDI, 100bef40         | 48 bf 40 ef 0b 10 00 00 00 00 
    f770013(10 bytes): mov RAX, af5ab770         | 48 b8 70 b7 5a af e9 2a 00 00 
    f77001d( 2 bytes): call EAX                  | ff d0 
    f77001f( 1 bytes): pop RAX, RSP              | 58 
    f770020( 2 bytes): pop R9, RSP               | 41 59 
    f770022( 2 bytes): pop R8, RSP               | 41 58 
    f770024( 1 bytes): pop RCX, RSP              | 59 
    f770025( 1 bytes): pop RDX, RSP              | 5a 
    f770026( 1 bytes): pop RSI, RSP              | 5e 
    f770027( 1 bytes): pop RDI, RSP              | 5f 
    f770028( 5 bytes): call 400448               | e8 1b 04 c9 f0 
    f77002d( 5 bytes): jmp 4004b6                | e9 84 04 c9 f0 

DUMP INSN - }
save context
payload
restore context
DUMP INSN (50 bytes)- for foo called at 4004bb / ret  4004c0{
    f956000( 1 bytes): push RDI, RSP             | 57 
    f956001( 1 bytes): push RSI, RSP             | 56 
    f956002( 1 bytes): push RDX, RSP             | 52 
    f956003( 1 bytes): push RCX, RSP             | 51 
    f956004( 2 bytes): push R8, RSP              | 41 50 
    f956006( 2 bytes): push R9, RSP              | 41 51 
    f956008( 1 bytes): push RAX, RSP             | 50 
    f956009(10 bytes): mov RDI, fef6cd0          | 48 bf d0 6c ef 0f 00 00 00 00 
    f956013(10 bytes): mov RAX, af5ab770         | 48 b8 70 b7 5a af e9 2a 00 00 
    f95601d( 2 bytes): call EAX                  | ff d0 
    f95601f( 1 bytes): pop RAX, RSP              | 58 
    f956020( 2 bytes): pop R9, RSP               | 41 59 
    f956022( 2 bytes): pop R8, RSP               | 41 58 
    f956024( 1 bytes): pop RCX, RSP              | 59 
    f956025( 1 bytes): pop RDX, RSP              | 5a 
    f956026( 1 bytes): pop RSI, RSP              | 5e 
    f956027( 1 bytes): pop RDI, RSP              | 5f 
    f956028( 5 bytes): call 400448               | e8 1b a4 aa f0 
    f95602d( 5 bytes): jmp 4004c0                | e9 8e a4 aa f0 

DUMP INSN - }
save context
payload
restore context
DUMP INSN (50 bytes)- for foo called at 4004c5 / ret  4004ca{
    1005c000( 1 bytes): push RDI, RSP             | 57 
    1005c001( 1 bytes): push RSI, RSP             | 56 
    1005c002( 1 bytes): push RDX, RSP             | 52 
    1005c003( 1 bytes): push RCX, RSP             | 51 
    1005c004( 2 bytes): push R8, RSP              | 41 50 
    1005c006( 2 bytes): push R9, RSP              | 41 51 
    1005c008( 1 bytes): push RAX, RSP             | 50 
    1005c009(10 bytes): mov RDI, b427e60          | 48 bf 60 7e 42 0b 00 00 00 00 
    1005c013(10 bytes): mov RAX, af5ab770         | 48 b8 70 b7 5a af e9 2a 00 00 
    1005c01d( 2 bytes): call EAX                  | ff d0 
    1005c01f( 1 bytes): pop RAX, RSP              | 58 
    1005c020( 2 bytes): pop R9, RSP               | 41 59 
    1005c022( 2 bytes): pop R8, RSP               | 41 58 
    1005c024( 1 bytes): pop RCX, RSP              | 59 
    1005c025( 1 bytes): pop RDX, RSP              | 5a 
    1005c026( 1 bytes): pop RSI, RSP              | 5e 
    1005c027( 1 bytes): pop RDI, RSP              | 5f 
    1005c028( 5 bytes): call 400448               | e8 1b 44 3a f0 
    1005c02d( 5 bytes): jmp 4004ca                | e9 98 44 3a f0 

DUMP INSN - }
# of calls: 0

real	3m8.961s
user	3m8.778s
sys	0m0.111s
