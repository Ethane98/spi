* Improvement from last version

 - A call point must have only one inserted snippet instance. However, in last
version, when propelling to callees, snippets are always inserted into
points. This causes a point contains more and more snippet instances. We use stl
list to store snippet instances, so the maintanence cost keeps growing.

* Possible improvement for next version

 - reduce # of instructions generated for each call. currently, 76 insns (or 200
   bytes)/ call

* Program

time /afs/cs.wisc.edu/s/gcc-4.1.0/amd64_cent40/libexec/gcc/x86_64-unknown-linux-gnu/4.1.0/cc1plus  /afs/cs.wisc.edu/p/paradyn/development/wenbin/dyninst/dyninst/dyninstAPI/src/unix.C -I/afs/cs.wisc.edu/p/paradyn/development/wenbin/dyninst/include -I/afs/cs.wisc.edu/p/paradyn/development/wenbin/dyninst/dyninst/common/h -I/afs/cs.wisc.edu/p/paradyn/development/wenbin/dyninst/dyninst/dynutil/h -I/afs/cs.wisc.edu/p/paradyn/development/wenbin/dyninst/dyninst -Wall -g -Dos_linux -Darch_x86_64 -Darch_64bit -Dx86_64_unknown_linux2_4  -Dcap_ptrace -Dcap_stripped_binaries -Dcap_async_events -Dcap_threads -Dcap_dynamic_heap -Dcap_relocation -Dcap_dwarf -Dcap_32_64 -Dcap_liveness -Dcap_fixpoint_gen -Dcap_noaddr_gen -Dcap_mutatee_traps -Dcap_binary_rewriter -Dcap_registers -Dcap_instruction_api -Dcap_serialization -Dcap_instruction_replacement -Dcap_tramp_liveness -Dbug_syscall_changepc_rewind -D__STDC_LIMIT_MACROS -D__STDC_CONSTANT_MACROS -I/afs/cs.wisc.edu/p/paradyn/development/wenbin/dyninst/dyninst/patchAPI/h

* Uninstrumented version

real    0m7.356s
user    0m2.054s
sys     0m0.679s

* Jump version (No indirect call)

real    4m46.558s
user    4m44.225s
sys     0m1.253s

38.9115646x slowdown

* Jump version (No indirect call, no tail payload)

real    4m42.212s
user    4m39.466s
sys     0m1.325s

38.36x slowdown

* Trap version (No indirect call)



* Trap version (w/ indirect call)

crash
