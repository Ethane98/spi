
INJECTOR   = Injector
AGENT      = libagent.so

all: $(INJECTOR) $(AGENT) clean_objs

GXX        = g++
RM         = rm -f

#======================================
# Injector
#======================================
IJ_SRCS    += $(IJ_DIR)/Injector.C \

IJ_OBJS    += $(notdir $(IJ_SRCS:%.C=%.o))

IJ_DEP  = .IJ_DEPENDS
IJ_DEPS:
	$(GXX) -MM $(IJ_IFLAGS) $(IJ_FLAGS) $(IJ_SRCS) > $(IJ_DEP)
include $(IJ_DEP)

$(IJ_OBJS): %.o : $(IJ_SRCS)
	@echo Compiling $(IJ_DIR)/$*.C
	@$(GXX) -c -o $@ $(IJ_IFLAGS) $(IJ_FLAGS) $(IJ_DIR)/$*.C

$(INJECTOR): $(IJ_OBJS) $(COMMON_OBJS)
	@echo Linking $@
	@$(GXX) -o $@ $(IJ_OBJS) $(COMMON_OBJS) $(IJ_LDFLAGS)

#======================================
# Agent
#======================================
AG_SRCS    += $(AG_DIR)/Agent.C \
              $(AG_DIR)/Parser.C \
              $(AG_DIR)/Event.C \

AG_OBJS    += $(notdir $(AG_SRCS:%.C=%.o))

AG_DEP  = .AG_DEPENDS
AG_DEPS:
	$(GXX) -MM $(AG_IFLAGS) $(AG_FLAGS) $(AG_SRCS) > $(AG_DEP)
include $(AG_DEP)

$(AG_OBJS): %.o : $(AG_SRCS)
	@echo Compiling $(AG_DIR)/$*.C
	@$(GXX) -c -o $@ $(AG_IFLAGS) $(AG_FLAGS) $(AG_DIR)/$*.C

$(AGENT): $(AG_OBJS) $(COMMON_OBJS)
	@echo Linking $@
	@$(GXX) -o $@  $(AG_OBJS) $(COMMON_OBJS) $(AG_LDFLAGS)


#=================================================
# clean
#=================================================
clean_objs:
	$(RM) *.o

clean:
	$(RM) $(INJECTOR) $(AGENT) *.o
	make IJ_DEPS
	make AG_DEPS

